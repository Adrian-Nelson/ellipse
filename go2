set -e

mkdir -p build/disk

# Assemble menu code
cd asm
../Tools/acme -o ../build/disk/ELLIPS2 -r ../build/ellips2.txt --vicelabels ../build/ellips2.tmp ellips2.a
cd ..

# Sort symbols
sort <build/ellips2.tmp | uniq >build/ellips2.sym
rm build/ellips2.tmp

# Create !BOOT file
printf "*BASIC\rPAGE=&1900\r*FX21\rCLOSE#0:MODE 1:OSCLI(\"LOAD ELLIPS2\"):TIME=0:CALL&2400:PRINT TIME\r" >build/disk/\!BOOT

# Create BASIC program
#python tools/basiclabel.py -s 10 -i 10 ./asm/basic.txt build/basic_out.txt
#tools/basictool -t build/basic_out.txt build/disk/BASIC

# Create INF file for !BOOT
myfilesize=$(stat -f %z "build/disk/!BOOT")
myfilesizehex=$(printf '%x\n' $myfilesize)
echo "$.!BOOT     FFFF1900 FFFF1900 $myfilesizehex" >build/disk/\!BOOT.INF

# Create INF file for ELLIPS2
myfilesize=$(stat -f %z "build/disk/ELLIPS2")
myfilesizehex=$(printf '%x\n' $myfilesize)
echo "$.ELLIPS2   FFFF2400 FFFF2400 $myfilesizehex" >build/disk/ELLIPS2.INF

# Create INF file for BASIC
#myfilesize=$(stat -f %z "build/disk/BASIC")
#myfilesizehex=$(printf '%x\n' $myfilesize)
#echo "$.BASIC   FFFF1900 FFFF1900 $myfilesizehex" >build/disk/BASIC.INF

# Create new SSD file with the appropriate files
cp templates/EMPTY.SSD ELLIPS2.SSD
cd build/disk
python3 ../../tools/image.py -d ../../ELLIPS2.SSD -i !BOOT -i ELLIPS2 # -i BASIC
cd ../..

if [ $USER == "tobynelson" ];
then
    # Open SSD in b2
    osascript -e 'quit app "b2 Debug"'
    sleep 1
    DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null 2>&1 && pwd )"
    open -a 'b2 Debug' --args -0 "$DIR/ELLIPS2.ssd" -b
else
    # Open SSD in BeebEm
    open ELLIPS2.ssd
fi
